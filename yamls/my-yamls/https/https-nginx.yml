apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  labels:
    run: my-nginx
spec:
  type: NodePort
  ports:
  - port: 8081
    targetPort: 80
    protocol: TCP
    name: http
    nodePort: 32532
  - port: 443
    protocol: TCP
    name: https
    nodePort: 32533
  selector:
    run: my-nginx
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv01
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi 
  claimRef:
    namespace: default
    name: nfs-pvc01
  accessModes:
    - ReadWriteMany 
  persistentVolumeReclaimPolicy: Retain 
  nfs: 
    path: /srv/nfs/kubernetes
    server: 192.168.0.100
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc01
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany      
  resources:
     requests:
       storage: 1Gi    
  volumeName: nfs-pv01
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
spec:
  selector:
    matchLabels:
      run: my-nginx
  replicas: 2
  template:
    metadata:
      labels:
        run: my-nginx
    spec:
      volumes:
      - name: secret-volume
        secret:
          secretName: tls-secret
      - name: configmap-volume
        configMap:
          name: nginxconfigmap
      - name: www
        persistentVolumeClaim:
          claimName: nfs-pvc01
      containers:
      - name: nginxhttps
        image: bprashanth/nginxhttps:1.0
        ports:
        - containerPort: 443
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: secret-volume
        - mountPath: /etc/nginx/conf.d
          name: configmap-volume
        - mountPath: /usr/share/nginx/html
          name: www
